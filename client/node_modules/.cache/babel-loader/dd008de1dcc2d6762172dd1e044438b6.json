{"ast":null,"code":"var _jsxFileName = \"C:\\\\reactGithub\\\\portakal\\\\client\\\\src\\\\App.js\";\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport { toast } from \"react-toastify\"; //components\n\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport Dashboard from \"./components/Dashboard\";\ntoast.configure();\n\nfunction App() {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  const setAuth = boolean => {\n    setIsAuthenticated(boolean);\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/login\",\n    render: props => !isAuthenticated ? React.createElement(Login, Object.assign({}, props, {\n      setAuth: setAuth,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    })) : React.createElement(Redirect, {\n      to: \"/dashboard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/register\",\n    render: props => !isAuthenticated ? React.createElement(Register, Object.assign({}, props, {\n      setAuth: setAuth,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    })) : React.createElement(Redirect, {\n      to: \"/dashboard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/dashboard\",\n    render: props => isAuthenticated ? React.createElement(Dashboard, Object.assign({}, props, {\n      setAuth: setAuth,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    })) : React.createElement(Redirect, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  })))));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/reactGithub/portakal/client/src/App.js"],"names":["React","Fragment","useState","useEffect","BrowserRouter","Router","Route","Switch","Redirect","toast","Login","Register","Dashboard","configure","App","isAuthenticated","setIsAuthenticated","setAuth","boolean","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,SAApC,QAAqD,OAArD;AAEA,OAAO,uCAAP;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,KAFF,EAGEC,MAHF,EAIEC,QAJF,QAKO,kBALP;AAOA,SAASC,KAAT,QAAsB,gBAAtB,C,CAEA;;AAEA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AAEAH,KAAK,CAACI,SAAN;;AAEA,SAASC,GAAT,GAAe;AAEb,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCd,QAAQ,CAAC,KAAD,CAAtD;;AAEA,QAAMe,OAAO,GAAIC,OAAD,IAAa;AAC3BF,IAAAA,kBAAkB,CAACE,OAAD,CAAlB;AACD,GAFD;;AAIA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,QAAlB;AAA2B,IAAA,MAAM,EAAEC,KAAK,IAAI,CAACJ,eAAD,GAAmB,oBAAC,KAAD,oBAAWI,KAAX;AAAkB,MAAA,OAAO,EAAEF,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAnB,GAA4D,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAxG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,WAAlB;AAA8B,IAAA,MAAM,EAAEE,KAAK,IAAI,CAACJ,eAAD,GAAmB,oBAAC,QAAD,oBAAcI,KAAd;AAAqB,MAAA,OAAO,EAAEF,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAnB,GAA+D,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA9G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,YAAlB;AAA+B,IAAA,MAAM,EAAEE,KAAK,IAAIJ,eAAe,GAAG,oBAAC,SAAD,oBAAeI,KAAf;AAAsB,MAAA,OAAO,EAAEF,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH,GAAgD,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF,CADF,CADF,CADF;AAaD;;AAED,eAAeH,GAAf","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\n\nimport \"react-toastify/dist/ReactToastify.css\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from \"react-router-dom\";\n\nimport { toast } from \"react-toastify\";\n\n//components\n\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport Dashboard from \"./components/Dashboard\";\n\ntoast.configure();\n\nfunction App() {\n\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  const setAuth = (boolean) => {\n    setIsAuthenticated(boolean);\n  }\n\n  return (\n    <Fragment>\n      <Router>\n        <div className=\"container\">\n          <Switch>\n            <Route exact path=\"/login\" render={props => !isAuthenticated ? <Login {...props} setAuth={setAuth} /> : <Redirect to=\"/dashboard\" /> } />\n            <Route exact path=\"/register\" render={props => !isAuthenticated ? <Register {...props} setAuth={setAuth} /> : <Redirect to=\"/dashboard\" /> } />\n            <Route exact path=\"/dashboard\" render={props => isAuthenticated ? <Dashboard {...props} setAuth={setAuth} /> : <Redirect to=\"/login\" /> } />\n          </Switch>\n        </div>\n      </Router>\n    </Fragment>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}