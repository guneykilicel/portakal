{"ast":null,"code":"var _jsxFileName = \"C:\\\\reactGithub\\\\portakal\\\\client\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useContext, useEffect, useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport AddRestaurant from \"../components/AddRestaurant\";\nimport Header from \"../components/Header\";\nimport RestaurantList from \"../components/RestaurantList\";\nimport { UserContext } from \"../context/UserContext\";\nconst Dashboard = _ref => {\n  _s();\n  let {\n    setAuth\n  } = _ref;\n  const {\n    user,\n    setUser\n  } = useContext(UserContext);\n  const [name, setName] = useState(\"\");\n  async function getName() {\n    try {\n      const response = await fetch(\"http://localhost:5000/dashboard\", {\n        method: \"GET\",\n        headers: {\n          token: localStorage.token\n        }\n      });\n      const parseRes = await response.json();\n\n      // verileri buradan topluyoruz\n      setName(parseRes.user_name);\n      setUser(parseRes);\n      console.log(parseRes);\n    } catch (err) {\n      console.error(err.message);\n    }\n  }\n  const logout = e => {\n    e.preventDefault();\n    localStorage.removeItem(\"token\");\n    setAuth(false);\n    toast.success(\"Logged out successfully!\");\n  };\n  useEffect(() => {\n    getName();\n  });\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    name: name,\n    logout: logout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(RestaurantList, {\n    name: name,\n    logout: logout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }));\n};\n_s(Dashboard, \"tSPoaJ2Ym4nJuIb6U+QgkJhzpzw=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","Fragment","useContext","useEffect","useState","toast","AddRestaurant","Header","RestaurantList","UserContext","Dashboard","setAuth","user","setUser","name","setName","getName","response","fetch","method","headers","token","localStorage","parseRes","json","user_name","console","log","err","error","message","logout","e","preventDefault","removeItem","success"],"sources":["C:/reactGithub/portakal/client/src/pages/Dashboard.js"],"sourcesContent":["import React, { Fragment, useContext, useEffect, useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport AddRestaurant from \"../components/AddRestaurant\";\nimport Header from \"../components/Header\";\nimport RestaurantList from \"../components/RestaurantList\";\nimport { UserContext } from \"../context/UserContext\";\n\nconst Dashboard = ({ setAuth }) => {\n\n  const {user, setUser} = useContext(UserContext)\n  const [name, setName] = useState(\"\")\n\n  async function getName() {\n    try {\n      const response = await fetch(\"http://localhost:5000/dashboard\", {\n        method: \"GET\",\n        headers: { token: localStorage.token }\n      })\n\n      const parseRes = await response.json();\n\n      // verileri buradan topluyoruz\n      setName(parseRes.user_name);\n      setUser(parseRes);\n      console.log(parseRes)\n\n    } catch (err) {\n      console.error(err.message)\n    }\n  }\n\n  const logout = (e) => {\n    e.preventDefault()\n    localStorage.removeItem(\"token\")\n    setAuth(false);\n    toast.success(\"Logged out successfully!\")\n  }\n\n  useEffect(() => {\n    getName();\n  })\n  return (\n    <Fragment>\n      {/* <div className=\"container\">\n        <h1>Dashboard - {name}</h1>\n      </div>\n      <button className=\"btn btn-primary\" onClick={e => logout(e)}>Logout</button> */}\n      <Header name={name} logout={logout} />\n      <RestaurantList name={name} logout={logout} />\n    </Fragment>\n  )\n}\n\nexport default Dashboard;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACxE,SAASC,KAAK,QAAQ,gBAAgB;AACtC,OAAOC,aAAa,MAAM,6BAA6B;AACvD,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,cAAc,MAAM,8BAA8B;AACzD,SAASC,WAAW,QAAQ,wBAAwB;AAEpD,MAAMC,SAAS,GAAG,QAAiB;EAAA;EAAA,IAAhB;IAAEC;EAAQ,CAAC;EAE5B,MAAM;IAACC,IAAI;IAAEC;EAAO,CAAC,GAAGX,UAAU,CAACO,WAAW,CAAC;EAC/C,MAAM,CAACK,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEpC,eAAeY,OAAO,GAAG;IACvB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAE;QAC9DC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UAAEC,KAAK,EAAEC,YAAY,CAACD;QAAM;MACvC,CAAC,CAAC;MAEF,MAAME,QAAQ,GAAG,MAAMN,QAAQ,CAACO,IAAI,EAAE;;MAEtC;MACAT,OAAO,CAACQ,QAAQ,CAACE,SAAS,CAAC;MAC3BZ,OAAO,CAACU,QAAQ,CAAC;MACjBG,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC;IAEvB,CAAC,CAAC,OAAOK,GAAG,EAAE;MACZF,OAAO,CAACG,KAAK,CAACD,GAAG,CAACE,OAAO,CAAC;IAC5B;EACF;EAEA,MAAMC,MAAM,GAAIC,CAAC,IAAK;IACpBA,CAAC,CAACC,cAAc,EAAE;IAClBX,YAAY,CAACY,UAAU,CAAC,OAAO,CAAC;IAChCvB,OAAO,CAAC,KAAK,CAAC;IACdN,KAAK,CAAC8B,OAAO,CAAC,0BAA0B,CAAC;EAC3C,CAAC;EAEDhC,SAAS,CAAC,MAAM;IACda,OAAO,EAAE;EACX,CAAC,CAAC;EACF,oBACE,oBAAC,QAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAKP,oBAAC,MAAM;IAAC,IAAI,EAAEF,IAAK;IAAC,MAAM,EAAEiB,MAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,eACtC,oBAAC,cAAc;IAAC,IAAI,EAAEjB,IAAK;IAAC,MAAM,EAAEiB,MAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CACrC;AAEf,CAAC;AAAA,GA5CKrB,SAAS;AAAA,KAATA,SAAS;AA8Cf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}