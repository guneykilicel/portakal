{"ast":null,"code":"var _jsxFileName = \"C:\\\\reactGithub\\\\portakal\\\\client\\\\src\\\\App.js\";\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\"; //components\n\nimport Login from \"./pages/Login\";\nimport Register from \"./pages/Register\";\nimport Dashboard from \"./pages/Dashboard\";\nimport Home from \"./pages/Home\";\nimport RestaurantDetailPage from \"./pages/RestaurantDetailPage\";\nimport UpdatePage from \"./pages/UpdatePage\";\nimport { RestaurantsContextProvider } from \"./context/RestaurantsContext\";\ntoast.configure();\n\nfunction App() {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  const setAuth = boolean => {\n    setIsAuthenticated(boolean);\n  };\n\n  async function isAuth() {\n    try {\n      const response = await fetch(\"http://localhost:5000/auth/is-verify\", {\n        method: \"GET\",\n        headers: {\n          token: localStorage.token\n        }\n      });\n      const parseRes = await response.json();\n      parseRes === true ? setIsAuthenticated(true) : setIsAuthenticated(false);\n    } catch (err) {\n      console.error(err.message);\n    }\n  }\n\n  useEffect(() => {\n    isAuth();\n  });\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(RestaurantsContextProvider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: Home,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/login\",\n    render: props => !isAuthenticated ? React.createElement(Login, Object.assign({}, props, {\n      setAuth: setAuth,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })) : React.createElement(Redirect, {\n      to: \"/dashboard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/register\",\n    render: props => !isAuthenticated ? React.createElement(Register, Object.assign({}, props, {\n      setAuth: setAuth,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })) : React.createElement(Redirect, {\n      to: \"/dashboard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/dashboard\",\n    render: props => isAuthenticated ? React.createElement(Dashboard, Object.assign({}, props, {\n      setAuth: setAuth,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    })) : React.createElement(Redirect, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/restaurants/:id\",\n    component: RestaurantDetailPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/restaurants/:id/update\",\n    component: UpdatePage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }))))));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/reactGithub/portakal/client/src/App.js"],"names":["React","Fragment","useState","useEffect","toast","BrowserRouter","Router","Route","Switch","Redirect","Login","Register","Dashboard","Home","RestaurantDetailPage","UpdatePage","RestaurantsContextProvider","configure","App","isAuthenticated","setIsAuthenticated","setAuth","boolean","isAuth","response","fetch","method","headers","token","localStorage","parseRes","json","err","console","error","message","props"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from \"react-router-dom\";\n\n\n\n//components\n\nimport Login from \"./pages/Login\";\nimport Register from \"./pages/Register\";\nimport Dashboard from \"./pages/Dashboard\";\nimport Home from \"./pages/Home\";\nimport RestaurantDetailPage from \"./pages/RestaurantDetailPage\";\nimport UpdatePage from \"./pages/UpdatePage\";\nimport { RestaurantsContextProvider } from \"./context/RestaurantsContext\";\n\ntoast.configure();\n\nfunction App() {\n\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  const setAuth = (boolean) => {\n    setIsAuthenticated(boolean);\n  }\n\n  async function isAuth() {\n    try {\n\n      const response = await fetch(\"http://localhost:5000/auth/is-verify\", {\n        method: \"GET\",\n        headers: { token: localStorage.token }\n      })\n\n      const parseRes = await response.json();\n\n      parseRes === true ? setIsAuthenticated(true) : setIsAuthenticated(false)\n\n    } catch (err) {\n      console.error(err.message)\n    }\n  }\n\n  useEffect(() => {\n    isAuth()\n  })\n\n  return (\n    <Fragment>\n      <RestaurantsContextProvider>\n        <Router>\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/login\" render={props => !isAuthenticated ? <Login {...props} setAuth={setAuth} /> : <Redirect to=\"/dashboard\" />} />\n              <Route exact path=\"/register\" render={props => !isAuthenticated ? <Register {...props} setAuth={setAuth} /> : <Redirect to=\"/dashboard\" />} />\n              <Route exact path=\"/dashboard\" render={props => isAuthenticated ? <Dashboard {...props} setAuth={setAuth} /> : <Redirect to=\"/login\" />} />\n              <Route exact path=\"/restaurants/:id\" component={RestaurantDetailPage} />\n              <Route exact path=\"/restaurants/:id/update\" component={UpdatePage} />\n            </Switch>\n          </div>\n        </Router>\n      </RestaurantsContextProvider>\n    </Fragment>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}