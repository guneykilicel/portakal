{"ast":null,"code":"var _jsxFileName = \"C:\\\\reactGithub\\\\portakal\\\\client\\\\src\\\\pages\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { LockClosedIcon } from '@heroicons/react/20/solid';\nconst Login = _ref => {\n  _s();\n  let {\n    setAuth\n  } = _ref;\n  const [inputs, setInputs] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const {\n    email,\n    password\n  } = inputs;\n  const onChange = e => {\n    setInputs({\n      ...inputs,\n      [e.target.name]: e.target.value\n    });\n  };\n  const onSubmitForm = async e => {\n    e.preventDefault();\n    try {\n      const body = {\n        email,\n        password\n      };\n      const response = await fetch(\"http://localhost:5000/auth/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      const parseRes = await response.json();\n      if (parseRes.token) {\n        localStorage.setItem(\"token\", parseRes.token);\n        setAuth(true);\n        toast.success(\"Login Successfully!\");\n      } else {\n        toast.error(parseRes);\n      }\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, \"Login\")));\n};\n_s(Login, \"GIjFpoWpaPtD7Jz1uOOMGoRu+JM=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","Fragment","useState","Link","toast","LockClosedIcon","Login","setAuth","inputs","setInputs","email","password","onChange","e","target","name","value","onSubmitForm","preventDefault","body","response","fetch","method","headers","JSON","stringify","parseRes","json","token","localStorage","setItem","success","error","err","console","message"],"sources":["C:/reactGithub/portakal/client/src/pages/Login.js"],"sourcesContent":["import React, { Fragment, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\n\nimport { LockClosedIcon } from '@heroicons/react/20/solid'\n\nconst Login = ({ setAuth }) => {\n\n  const [inputs, setInputs] = useState({\n    email: \"\",\n    password: \"\"\n  })\n\n  const { email, password } = inputs;\n\n  const onChange = (e) => {\n    setInputs({\n      ...inputs, [e.target.name]\n        : e.target.value\n    });\n  }\n\n  const onSubmitForm = async (e) => {\n    e.preventDefault()\n\n    try {\n      const body = { email, password }\n      const response = await fetch(\"http://localhost:5000/auth/login\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(body)\n      });\n\n      const parseRes = await response.json()\n\n      if (parseRes.token) {\n        localStorage.setItem(\"token\", parseRes.token);\n        setAuth(true);\n        toast.success(\"Login Successfully!\");\n      } else {\n        toast.error(parseRes)\n      }\n\n    } catch (err) {\n      console.error(err.message)\n    }\n  }\n\n  return (\n    <Fragment>\n      {/* <div className=\"\">\n        <h1 className=\"text-5xl mt-4 text-center\" >Login</h1>\n        <form onSubmit={onSubmitForm}>\n          <input\n            onChange={e => onChange(e)}\n            value={email}\n            className=\" form-control my-3\"\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"email\">\n          </input>\n          <input\n            onChange={e => onChange(e)}\n            value={password}\n            className=\" form-control my-3\"\n            type=\"password\" name=\"password\"\n            placeholder=\"password\">\n          </input>\n          <button className=\"btn btn-success btn-block\" >Submit</button>\n        </form>\n        <Link to=\"/register\">Register</Link>\n      </div> */}\n\n      <div>\n        <h1>Login</h1>\n      </div>\n\n\n{/* <div className=\"!flex !min-h-full !items-center !justify-center py-12 px-4 sm:px-6 lg:px-8\">\n        <div className=\"!w-full max-w-md space-y-8\">\n          <div>\n            <img\n              className=\"mx-auto h-12 w-auto\"\n              src=\"https://tailwindui.com/img/logos/mark.svg?color=indigo&shade=600\"\n              alt=\"Your Company\"\n            />\n            <h2 className=\"mt-6 text-center text-3xl font-bold tracking-tight text-gray-900\">\n              Sign in to your account\n            </h2>\n            <p className=\"mt-2 text-center text-sm text-gray-600\">\n              Or{' '}\n              <a href=\"#\" className=\"font-medium text-indigo-600 hover:text-indigo-500\">\n                start your 14-day free trial\n              </a>\n            </p>\n          </div>\n\n          <form onSubmit={onSubmitForm} className=\"mt-8 space-y-6\" action=\"#\" method=\"POST\">\n            <input type=\"hidden\" name=\"remember\" defaultValue=\"true\" />\n            <div className=\"-space-y-px rounded-md shadow-sm\">\n              <div>\n                <label htmlFor=\"email-address\" className=\"sr-only\">\n                  Email address\n                </label>\n                <input\n                onChange={e => onChange(e)}\n                value={email}\n                  id=\"email-address\"\n                  name=\"email\"\n                  type=\"email\"\n                  autoComplete=\"email\"\n                  required\n                  className=\"relative block w-full appearance-none rounded-none rounded-t-md border border-gray-300 px-3 py-2 text-gray-900 placeholder-gray-500 focus:z-10 focus:border-indigo-500 focus:outline-none focus:ring-indigo-500 sm:text-sm\"\n                  placeholder=\"Email address\"\n                />\n              </div>\n              <div>\n                <label htmlFor=\"password\" className=\"sr-only\">\n                  Password\n                </label>\n                <input\n                onChange={e => onChange(e)}\n                value={password}\n                  id=\"password\"\n                  name=\"password\"\n                  type=\"password\"\n                  autoComplete=\"current-password\"\n                  required\n                  className=\"relative block w-full appearance-none rounded-none rounded-b-md border border-gray-300 px-3 py-2 text-gray-900 placeholder-gray-500 focus:z-10 focus:border-indigo-500 focus:outline-none focus:ring-indigo-500 sm:text-sm\"\n                  placeholder=\"Password\"\n                />\n              </div>\n            </div>\n\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center\">\n                <input\n                  id=\"remember-me\"\n                  name=\"remember-me\"\n                  type=\"checkbox\"\n                  className=\"h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-500\"\n                />\n                <label htmlFor=\"remember-me\" className=\"ml-2 block text-sm text-gray-900\">\n                  Remember me\n                </label>\n              </div>\n\n              <div className=\"text-sm\">\n                <a href=\"#\" className=\"font-medium text-indigo-600 hover:text-indigo-500\">\n                  Forgot your password?\n                </a>\n              </div>\n            </div>\n\n            <div>\n              <button\n                type=\"submit\"\n                className=\"group relative flex w-full justify-center rounded-md border border-transparent bg-indigo-600 py-2 px-4 text-sm font-medium text-white hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2\"\n              >\n                <span className=\"absolute inset-y-0 left-0 flex items-center pl-3\">\n                  <LockClosedIcon className=\"h-5 w-5 text-indigo-500 group-hover:text-indigo-400\" aria-hidden=\"true\" />\n                </span>\n                Sign in\n              </button>\n              <Link to=\"/register\">Register</Link>\n            </div>\n          </form>\n        </div>\n      </div> */}\n    </Fragment>\n  )\n}\n\nexport default Login;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,QAAQ,QAAQ,OAAO;AACjD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,KAAK,QAAQ,gBAAgB;AAEtC,SAASC,cAAc,QAAQ,2BAA2B;AAE1D,MAAMC,KAAK,GAAG,QAAiB;EAAA;EAAA,IAAhB;IAAEC;EAAQ,CAAC;EAExB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC;IACnCQ,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE;EACZ,CAAC,CAAC;EAEF,MAAM;IAAED,KAAK;IAAEC;EAAS,CAAC,GAAGH,MAAM;EAElC,MAAMI,QAAQ,GAAIC,CAAC,IAAK;IACtBJ,SAAS,CAAC;MACR,GAAGD,MAAM;MAAE,CAACK,CAAC,CAACC,MAAM,CAACC,IAAI,GACrBF,CAAC,CAACC,MAAM,CAACE;IACf,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOJ,CAAC,IAAK;IAChCA,CAAC,CAACK,cAAc,EAAE;IAElB,IAAI;MACF,MAAMC,IAAI,GAAG;QAAET,KAAK;QAAEC;MAAS,CAAC;MAChC,MAAMS,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;QAC/DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CJ,IAAI,EAAEK,IAAI,CAACC,SAAS,CAACN,IAAI;MAC3B,CAAC,CAAC;MAEF,MAAMO,QAAQ,GAAG,MAAMN,QAAQ,CAACO,IAAI,EAAE;MAEtC,IAAID,QAAQ,CAACE,KAAK,EAAE;QAClBC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEJ,QAAQ,CAACE,KAAK,CAAC;QAC7CrB,OAAO,CAAC,IAAI,CAAC;QACbH,KAAK,CAAC2B,OAAO,CAAC,qBAAqB,CAAC;MACtC,CAAC,MAAM;QACL3B,KAAK,CAAC4B,KAAK,CAACN,QAAQ,CAAC;MACvB;IAEF,CAAC,CAAC,OAAOO,GAAG,EAAE;MACZC,OAAO,CAACF,KAAK,CAACC,GAAG,CAACE,OAAO,CAAC;IAC5B;EACF,CAAC;EAED,oBACE,oBAAC,QAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAwBP;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,WAAc,CACV,CA8FG;AAEf,CAAC;AAAA,GArKK7B,KAAK;AAAA,KAALA,KAAK;AAuKX,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}